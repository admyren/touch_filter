/*
 * stm32_uart.h
 *
 *  Created on: 28 mars 2021
 *      Author: Myren
 */

#ifndef STM32_UART_H_
#define STM32_UART_H_

#include <stdint.h>

#define USART_1_ADDR 0x40011000
#define USART_2_ADDR 0x40004400
#define USART_3_ADDR 0x40004800
#define UART_4_ADDR 0x40004C00
#define UART_5_ADDR 0x40005000
#define USART_6_ADDR 0x40011400

typedef struct
{
   volatile uint32_t SR;
   volatile uint32_t DR;
   volatile uint32_t BRR;
   volatile uint32_t CR1;
   volatile uint32_t CR2;
   volatile uint32_t CR3;
   volatile uint32_t GTPR;
}usart_reg_t;

#define USART1 ((usart_reg_t*)USART_1_ADDR
#define USART2 ((usart_reg_t*)USART_2_ADDR
#define USART3 ((usart_reg_t*)USART_3_ADDR
#define UART4 ((usart_reg_t*)UART_4_ADDR
#define UART5 ((usart_reg_t*)UART_5_ADDR
#define USART6 ((usart_reg_t*)USART_6_ADDR

typedef enum
{
   STOP_BITS_1,
   STOP_BITS_1,
}usart_stop_bit_e;

typedef enum
{
   DATA_BITS_8,
   DATA_BITS_9
}usart_data_bits_e;



#endif /* STM32_UART_H_ */
