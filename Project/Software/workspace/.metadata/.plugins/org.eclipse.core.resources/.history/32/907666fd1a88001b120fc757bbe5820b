
//#include "stm32f4xx.h"
#include "gpio.h"
#include "rcc.h"

#define DELAY 1000000

volatile uint32_t count;

void init_gpio_test(void)
{
#if 0
   RCC->AHB1ENR |= (1 << 2);

   GPIOC->MODER |= (1 << 4);

#else
   gpio_config_t gpio_conf;

   gpio_conf.mode = gpio_gpo;
   gpio_conf.output_type = gpio_opp;
   gpio_conf.output_speed = gpio_ms;
   gpio_conf.pull_up_down = gpio_no_pull;
   gpio_conf.alternate_func = gpio_af_0;
   gpio_conf.lock = gpio_lock_off;
   gpio_conf.pins = gpio_pin_2 | gpio_pin_3;

   RCC->AHB1ENR |= (1 << 2);
   gpio_init(GPIOC, &gpio_conf);
#endif
}


int main(void)
{

   init_gpio_test();
   while(1)
   {
#if 0
      for(count=0; count<DELAY; count++);
      gpio_pin_set(GPIOC, gpio_pin_2 | gpio_pin_3);
      for(count=0; count<DELAY; count++);
      gpio_pin_reset(GPIOC, gpio_pin_2 | gpio_pin_3);
#endif
      for(count=0; count<DELAY; count++);
      GPIOC->ODR ^= (1 << 2);
   }
}
